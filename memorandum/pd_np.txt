df['商品名称'].str.replace('$','￥',regex=False)   #把单列字符，注意.str函数只能用于Series或列，不能直接作用于整个DataFrame

可以看到，对同一份数据，pkl格式的数据的读取速度最快，是读取csv格式数据的近6倍，其次是hdf格式的数据，速度最惨不忍睹的是读取xlsx格式的数据（这仅仅是一份只有15M左右大小的数据集呀）。
所以对于日常的数据集（大多为csv格式），可以先用pandas读入，然后将数据转存为pkl或者hdf格式，之后每次读取数据时候，便可以节省一些时间。代码如下：
df.to_pickle('xxx.pkl') #格式另存
df = pd.read_pickle('xxx.pkl') #读取

比pandas时间差不多
data['股票代码'] = np.where((data['股票代码'].str[:2] == '00') | (data['股票代码'].str[:2] == '30'), '0'+data['股票代码'], data['股票代码'])
data['股票代码'] = data['股票代码'].mask((data['股票代码'].str[:2] == '00') | (data['股票代码'].str[:2] == '30'), '0'+data['股票代码'])

pd.set_option('expand_frame_repr', False) # 当列太多时不换行
pd.set_option('display.max_rows', 5000) # 最多显示数据的行数